{"version":3,"sources":["misc/img/Circle.svg","components/lab/UnstableButton.js","App.js","reportWebVitals.js","index.js"],"names":["UnstableButton","onClick","children","useState","clicked","setClicked","width","transitionDuration","display","circleStyles","setCircleStyles","Fragment","className","style","src","CircleSVG","Button","variant","color","setTimeout","App","started","setStarted","height","alignItems","justifyContent","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,MAA0B,mC,OCwD1BA,EAnDQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACjC,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,CAC/CG,MAAO,QACPC,mBAAoB,IACpBC,QAAS,UAHX,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OAAKN,EAcH,eAAC,IAAMO,SAAP,WACE,qBACEC,UAAU,UACVC,MAAO,CACLL,QAASC,EAAaD,QACtBF,MAAOG,EAAaH,MACpBC,mBAAoBE,EAAaF,oBAEnCO,IAAKC,IAENb,KAtBD,cAACc,EAAA,EAAD,CACEJ,UAAU,iBACVK,QAAQ,YACRC,MAAM,YACNL,MAAO,CAAEP,MAAO,SAChBL,QArBc,WAClBI,GAAW,GAEXc,YAAW,WACTT,EAAgB,CAAEJ,MAAO,SACzBa,YACE,kBAAMT,EAAgB,CAAEF,QAAS,WACC,IAAlCC,EAAaF,sBAEd,IAEHN,KAKE,oB,MCGSmB,MA3Bf,WACE,MAA8BjB,oBAAS,GAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KAIA,OACE,qBACEV,UAAU,MACVC,MAAO,CACLL,QAAS,OACTe,OAAQ,QACRC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,QAPrB,SAUE,cAAC,EAAD,CAAgBzB,QAbA,kBAAMqB,GAAW,IAajC,SACGD,GAEC,qBAAKR,MAAO,CAAEa,gBAAiB,QAASpB,MAAO,QAA/C,qBCZKqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f8a2ad2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Circle.9f32f1c9.svg\";","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport CircleSVG from '../../misc/img/Circle.svg';\r\n\r\nconst UnstableButton = ({ onClick, children }) => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const [circleStyles, setCircleStyles] = useState({\r\n    width: '200px',\r\n    transitionDuration: 1.5,\r\n    display: 'fixed',\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setClicked(true);\r\n\r\n    setTimeout(() => {\r\n      setCircleStyles({ width: '400%' });\r\n      setTimeout(\r\n        () => setCircleStyles({ display: 'none' }),\r\n        circleStyles.transitionDuration * 1000\r\n      );\r\n    }, 50);\r\n\r\n    onClick();\r\n  };\r\n\r\n  if (!clicked)\r\n    return (\r\n      <Button\r\n        className='zoom-in-target'\r\n        variant='contained'\r\n        color='secondary'\r\n        style={{ width: '200px' }}\r\n        onClick={handleClick}\r\n      >\r\n        Start\r\n      </Button>\r\n    );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        className='zoom-in'\r\n        style={{\r\n          display: circleStyles.display,\r\n          width: circleStyles.width,\r\n          transitionDuration: circleStyles.transitionDuration,\r\n        }}\r\n        src={CircleSVG}\r\n      />\r\n      {children}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UnstableButton;\r\n","import React, { useState } from 'react';\r\nimport { Fade } from 'react-reveal';\r\nimport UnstableButton from './components/lab/UnstableButton';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [started, setStarted] = useState(false);\r\n\r\n  const handleStart = () => setStarted(true);\r\n\r\n  return (\r\n    <div\r\n      className='App'\r\n      style={{\r\n        display: 'flex',\r\n        height: '100vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#333',\r\n      }}\r\n    >\r\n      <UnstableButton onClick={handleStart}>\r\n        {started && (\r\n          // <Fade>\r\n          <div style={{ backgroundColor: 'white', width: '100%' }}>XD</div>\r\n          // </Fade>\r\n        )}\r\n      </UnstableButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}