{"version":3,"sources":["misc/img/HorizontalArrow.svg","components/lab/DirectionalArrow.js","components/lab/CardMediaList.js","components/lab/ProjectGlance.js","misc/img/Loading.svg","components/global/Loading.js","components/HOC/WithLoading.js","components/lab/ProjectsList.js","App.js","reportWebVitals.js","index.js"],"names":["DirectionalArrow","direction","handleClick","className","rotation","src","HorizontalArrow","style","transform","alt","onClick","useStyles","makeStyles","arrowsContainer","width","height","position","display","justifyContent","alignItems","zIndex","arrow","opacity","transition","slider","sliderItem","sliderItemActive","CardMediaList","images","commonClasses","tooltip","useState","indexActive","setIndexActive","classes","handleImageChange","length","map","image","index","CardMedia","title","root","maxWidth","flexDirection","media","actions","ProjectGlance","name","description","siteWeb","siteCode","Card","CardActionArea","CardContent","setTimeout","window","open","code","web","location","href","Typography","gutterBottom","variant","component","color","CardActions","Button","size","target","Loading","LoadingSVG","WithLoading","Wrapped","message","props","loaded","setLoaded","isLoaded","container","gap","placeContent","flexWrap","padding","normalizeName","replace","projects","setProjects","useEffect","a","fetch","headers","Accept","results","json","body","mapped","filter","project","topics","includes","id","html_url","homepage","imageUrl","fetchProjects","App","backgroundColor","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a4d1ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HorizontalArrow.4a437ba8.svg\";","import React from 'react';\r\nimport HorizontalArrow from '../../misc/img/HorizontalArrow.svg';\r\n\r\nconst DirectionalArrow = ({ direction, handleClick, className }) => {\r\n  const rotation = direction === 'left' ? 'rotate(180deg)' : '';\r\n\r\n  return (\r\n    <img\r\n      src={HorizontalArrow}\r\n      style={{ transform: rotation }}\r\n      alt=''\r\n      className={className}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DirectionalArrow;\r\n","import React, { useState } from 'react';\r\nimport { CardMedia, Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DirectionalArrow from './DirectionalArrow';\r\n\r\nconst useStyles = makeStyles({\r\n  arrowsContainer: {\r\n    width: '100%',\r\n    height: '65%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    zIndex: 100,\r\n  },\r\n  arrow: {\r\n    height: '25%',\r\n    opacity: '.8',\r\n    transition: 'opacity .1s linear',\r\n    '&:hover': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  slider: {\r\n    position: 'relative',\r\n    height: '200px',\r\n  },\r\n  sliderItem: {\r\n    position: 'absolute',\r\n    opacity: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    transition: '1s ease',\r\n  },\r\n  sliderItemActive: {\r\n    opacity: 1,\r\n  },\r\n});\r\n\r\nconst CardMediaList = ({ images = [], commonClasses, tooltip }) => {\r\n  const [indexActive, setIndexActive] = useState(0);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleImageChange = direction => {\r\n    if (direction === 'left') {\r\n      if (indexActive - 1 >= 0) {\r\n        setIndexActive(indexActive - 1);\r\n      }\r\n    } else {\r\n      if (indexActive + 1 < images.length) {\r\n        setIndexActive(indexActive + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {images.length > 1 && (\r\n        <div className={classes.arrowsContainer}>\r\n          <DirectionalArrow\r\n            direction='left'\r\n            className={classes.arrow}\r\n            handleClick={() => handleImageChange('left')}\r\n          />\r\n          <DirectionalArrow\r\n            direction='right'\r\n            className={classes.arrow}\r\n            handleClick={() => handleImageChange('right')}\r\n          />\r\n        </div>\r\n      )}\r\n      <section className={classes.slider}>\r\n        {images.map((image, index) => (\r\n          <CardMedia\r\n            key={`CardMedia-${index}`}\r\n            className={`${commonClasses} ${classes.sliderItem} ${\r\n              index === indexActive ? classes.sliderItemActive : ''\r\n            }`}\r\n            image={image}\r\n            title={tooltip}\r\n          />\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMediaList;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardMediaList from './CardMediaList';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 345,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n  media: {\r\n    height: 180,\r\n  },\r\n  actions: {\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst getValidUrl = (web, code) => {\r\n  if (web) {\r\n    if (web !== window.location.href) {\r\n      return web;\r\n    }\r\n  }\r\n  if (code) {\r\n    return code;\r\n  }\r\n};\r\n\r\nconst ProjectGlance = ({\r\n  images = [],\r\n  tooltip,\r\n  name,\r\n  description,\r\n  siteWeb,\r\n  siteCode,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMediaList images={images} commonClasses={classes.media} tooltip={tooltip} />\r\n        <CardContent\r\n          onClick={() =>\r\n            setTimeout(() => window.open(getValidUrl(siteWeb, siteCode), '_blank'), 300)\r\n          }\r\n        >\r\n          <Typography gutterBottom variant='h5' component='h2'>\r\n            {name}\r\n          </Typography>\r\n          <Typography variant='body2' color='textSecondary' component='p'>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className={classes.actions}>\r\n        <Button size='small' color='primary' href={siteCode} target='_blank'>\r\n          See code\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectGlance;\r\n","export default __webpack_public_path__ + \"static/media/Loading.d0c13b3e.svg\";","import React from 'react';\r\nimport LoadingSVG from '../../misc/img/Loading.svg';\r\n\r\nconst Loading = () => {\r\n  return <img src={LoadingSVG} alt='' />;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from 'react';\r\nimport Loading from '../global/Loading';\r\n\r\nconst WithLoading = (Wrapped, message) => {\r\n  return function HOC(props) {\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const setLoadedState = isLoaded => setLoaded(isLoaded);\r\n\r\n    return (\r\n      <>\r\n        {!loaded && <Loading message={message} />}\r\n        {<Wrapped {...props} isLoaded={loaded} setLoaded={setLoadedState} />}\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default WithLoading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ProjectGlance from './ProjectGlance';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WithLoading from '../HOC/WithLoading';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    gap: '2rem',\r\n    placeContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '1rem',\r\n  },\r\n});\r\n\r\nconst normalizeName = name => name.replace(/-/g, ' ');\r\n\r\nconst ProjectList = ({ isLoaded, setLoaded }) => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const results = await fetch('https://api.github.com/users/iskewedi/repos', {\r\n        headers: { Accept: 'application/vnd.github.mercy-preview+json' },\r\n      });\r\n\r\n      const body = await results.json();\r\n\r\n      const mapped = body\r\n        .filter(project => project.topics && project.topics.includes('show-in-resume'))\r\n        .map(({ name, description, id, html_url, homepage }, index) => ({\r\n          name: normalizeName(name),\r\n          tooltip: `Image of ${name}`,\r\n          imageUrl: `https://picsum.photos/500/300?random=${index}`,\r\n          description,\r\n          id,\r\n          siteCode: html_url,\r\n          siteWeb: homepage,\r\n        }));\r\n\r\n      setProjects(mapped);\r\n      setLoaded(true);\r\n    };\r\n\r\n    if (!isLoaded) {\r\n      fetchProjects();\r\n    }\r\n  }, [isLoaded, setLoaded, projects, setProjects]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {projects &&\r\n        projects.map(\r\n          ({ imageUrl, tooltip, name, description, siteCode, siteWeb }, index) => (\r\n            <ProjectGlance\r\n              key={`Project-${index}`}\r\n              images={[imageUrl, `https://picsum.photos/500/500?random=${index + 1 * 2}`]}\r\n              tooltip={tooltip}\r\n              name={name}\r\n              description={description}\r\n              siteCode={siteCode}\r\n              siteWeb={siteWeb}\r\n            />\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithLoading(ProjectList, 'Loading projects...');\r\n","import React, { useState, Suspense } from 'react';\r\n// import { Fade } from 'react-reveal';\r\n// import UnstableButton from './components/lab/UnstableButton';\r\n// import BlurryFade from './components/lab/BlurryFade';\r\n// import ReactImage from './misc/img/ReactLogo.png';\r\n// import { Canvas } from '@react-three/fiber';\r\n// import Rope from './components/lab/Rope';\r\n// import Loading from './components/global/Loading';\r\n// import MainScene from './components/scene/MainScene';\r\n\r\nimport ProjectList from './components/lab/ProjectsList';\r\nfunction App() {\r\n  const [started, setStarted] = useState(false);\r\n\r\n  const handleStart = () => setStarted(true);\r\n\r\n  return (\r\n    <div\r\n      className='App'\r\n      style={{\r\n        // display: 'grid',\r\n        // gridTemplateColumns: 'repeat(3, 1fr)',\r\n        height: '100vh',\r\n        // alignItems: 'center',\r\n        // justifyContent: 'center',\r\n        backgroundColor: '#333',\r\n      }}\r\n    >\r\n      {/* <Suspense fallback={<Loading />}>\r\n        <Canvas>\r\n          <MainScene />\r\n        </Canvas>\r\n      </Suspense> */}\r\n\r\n      <div style={{ textAlign: 'center' }}>\r\n        <ProjectList />\r\n      </div>\r\n\r\n      {/* <ProjectGlance\r\n        image='https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png'\r\n        tooltip='Tooltip'\r\n        name='Project Example'\r\n        description='Lorem Ipsum es simplemente el texto de relleno de las imprentas y archivos de texto. Lorem Ipsum ha sido el texto de relleno estándar de las industrias desde el año 1500, cuando un impresor (N. del T. persona que se dedica a la imprenta) desconocido usó una galería de textos y los mezcló de tal manera que logró hacer un libro de textos especimen. No sólo sobrevivió 500 años, sino que tambien ingresó como texto de relleno en documentos electrónicos, quedando esencialmente igual al original. '\r\n      /> */}\r\n\r\n      {/* <UnstableButton onClick={handleStart}>\r\n        <BlurryFade duration={0.7} type='ease-in-out' initialBlur={15} start={started}>\r\n          <div style={{ backgroundColor: '#333', width: '100%', height: '100%' }}>\r\n            Prueba\r\n            <img src={ReactImage} />\r\n          </div>\r\n        </BlurryFade>\r\n      </UnstableButton> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}